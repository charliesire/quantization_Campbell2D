% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/std_proba.R
\name{std_proba}
\alias{std_proba}
\title{Computation of the IS coefficients of variation of the membership probability for different set of prototypes.}
\usage{
std_proba(
  outputs,
  gamma_list,
  density_ratio,
  distance_func = function(A1, A2) {
     return(sqrt(sum((A1 - A2)^2)))
 },
  cells,
  cell_numbers = NULL,
  nv
)
}
\arguments{
\item{outputs}{The output samples that need to be quantized. Useful only if cell_numbers == NULL.}

\item{gamma_list}{A list of gamma on which we want to evaluate the IS coefficient of variation of the membership probability. Each gamma is a set of prototypes}

\item{density_ratio}{density_ratio indicates the weight fX/g of each output}

\item{distance_func}{A function computing a distance between two elements in the output spaces.}

\item{cells}{The Vorono√Ø cell numbers that we are investigating}

\item{cell_numbers}{An optional list providing for each set of prototypes the voronoi cell number of every output.}

\item{nv}{The size of the sample for which we want to estimate the IS coefficient of variation of the membership probability}
}
\value{
A list of IS coefficients of variation of the membership probability obtained for each set of prototypes.
}
\description{
Computation of the IS coefficients of variation of the membership probability for different set of prototypes.
}
\examples{
func2D <- function(X){
Zgrid <- expand.grid(z1 = seq(-5,5,l=20),z2 = seq(-5,5,l=20))
n<-nrow(X)
Y <- lapply(1:n, function(i){X[i,]*exp(-((0.8*Zgrid$z1+0.2*Zgrid$z2
-10*X[i,])**2)/(60*X[i,]**2))*(Zgrid$z1-Zgrid$z2)*cos(X[i,]*4)})
Ymaps<- array(unlist(Y),dim=c(20,20,n))
return(Ymaps)
}
design = data.frame(X = seq(-1,1,l= 50))
outputs = func2D(design)
gamma_list = list(lapply(c(1,3,10,14,18), function(i){outputs[,,i]}))
density_ratio = rep(1, 50)
distance_func = function(A1,A2){return(sqrt(sum((A1-A2)^2)))}
list_std_proba = std_proba(outputs = outputs, gamma_list = gamma_list,
 density_ratio = density_ratio, distance_func = distance_func,
 cells = 1:length(gamma_list[[1]]), nv = 50)
}
