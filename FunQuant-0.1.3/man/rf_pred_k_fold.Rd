% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf_pred_k_fold.R
\name{rf_pred_k_fold}
\alias{rf_pred_k_fold}
\title{Predict the output class with random forest classifier by kfold cross validation for different hyperparameters values}
\usage{
rf_pred_k_fold(x, y, list_search, nb_folds, seed = NULL, ...)
}
\arguments{
\item{x}{A dataframe of inputs}

\item{y}{A vector of categorical output}

\item{list_search}{A list containing for each hyperparameters to be tested a list of the tested values.}

\item{nb_folds}{Number of folds}

\item{seed}{An optional random seed}

\item{...}{other parameters of \code{\link{randomForest}} function from \code{randomForest}.}
}
\value{
A list containing a vector of predicted classes for each combination of tested hyperparameters.
}
\description{
Predict the output class with random forest classifier by kfold cross validation for different hyperparameters values
}
\examples{
set.seed(5)
func2D <- function(X){
Zgrid <- expand.grid(z1 = seq(-5,5,l=20),z2 = seq(-5,5,l=20))
n<-nrow(X)
Y <- lapply(1:n, function(i){(X[i,2] > 0)*X[i,2]*X[i,1]*
exp(-((0.8*Zgrid$z1+0.2*Zgrid$z2-10*X[i,1])**2)/(60*X[i,1]**2))*
(Zgrid$z1-Zgrid$z2)*cos(X[i,1]*4)^2*sin(X[i,2]*4)^2})
Ymaps<- array(unlist(Y),dim=c(20,20,n))
return(Ymaps)
}
library(randtoolbox)
x = as.data.frame(sobol(30,2))*2-1
outputs = func2D(x)
y = as.factor(Vectorize(function(i){sum(outputs[,,i])})(1:dim(outputs)[3]) > 5)
list_search = list("nodesize" = as.list(c(1,3,5,7,9,11)))
rf_pred_k_fold(x = x,y = y, list_search = list_search, nb_folds = 4)
}
